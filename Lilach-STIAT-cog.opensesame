# Generated by OpenSesame 2.9.6 (Hesitant Heisenberg)
# Sun Jul 19 09:59:40 2015 (nt)
# <http://www.cogsci.nl/opensesame>

set background "black"
set bidi "yes"
set canvas_backend "xpyriment"
set compensation "0"
set coordinates "relative"
set description "A template containing a practice and an experimental phase"
set font_bold "no"
set font_family "hebrew"
set font_italic "no"
set font_size "18"
set foreground "white"
set height "768"
set keyboard_backend "legacy"
set mouse_backend "xpyriment"
set sampler_backend "legacy"
set start "experiment"
set subject_nr "0"
set subject_parity "even"
set synth_backend "legacy"
set title "ST-IAT Cognition"
set width "1024"

define inline_script Block_left
	___prepare__
	stim_words = []
	sara_n = []
	positive_n = []
	negative_n = []
	
	#Where is Sara?
	#Sara is on the right
	sara_loc = "left"
	
	
	#create Positive list of 10 stimuli
	positive_n.extend(positive)
	#len(positive_n) == 4
	positive_n.extend(positive)
	#len(positive_n) == 8
	positive_n.extend(random.sample(positive, 2))
	#len(positive_n) == 10
	
	#create Negative list of 16 stimuli
	negative_n.extend(negative)
	#len(negative_n) == 4
	negative_n.extend(negative)
	#len(negative_n) == 8
	negative_n.extend(negative)
	#len(negative_n) == 12
	negative_n.extend(negative)
	#len(negative_n) == 16
	
	#create Sara list of 10 stimuli
	sara_n.extend(sara)
	#len(sara_n) == 4
	sara_n.extend(sara)
	#len(sara_n) == 8
	sara_n.extend(random.sample(sara, 2))
	#len(sara_n) == 10
	
	
	#create and shuffle joint stimuli list
	random.shuffle(positive_n)
	random.shuffle(negative_n)
	random.shuffle(sara_n)
	stim_words.extend(positive_n)
	stim_words.extend(negative_n)
	stim_words.extend(sara_n)
	random.shuffle(stim_words)
	
	#create iterator
	i = 0
	
	#store length of stimuli list for repeat count
	exp.set("stim_len",len(stim_words))
	
	#store location of Sara for correct_response, and category labels
	if sara_loc == "right":
		exp.set("left_cat","")
		exp.set("right_cat",u'U+05E9U+05E8U+05D4')
		sara_correct = "i"
	elif sara_loc == "left":
		exp.set("left_cat",u'U+05E9U+05E8U+05D4')
		exp.set("right_cat","")
		sara_correct = "e"
	else:
		exp.set("left_cat","")
		exp.set("right_cat","")
		sara_correct = " "
	__end__
	set _run ""

define inline_script Block_right
	___prepare__
	stim_words = []
	sara_n = []
	positive_n = []
	negative_n = []
	
	#Where is Sara?
	#Sara is on the right
	sara_loc = "right"
	
	
	#create Positive list of 10 stimuli
	positive_n.extend(positive)
	#len(positive_n) == 4
	positive_n.extend(positive)
	#len(positive_n) == 8
	positive_n.extend(random.sample(positive, 2))
	#len(positive_n) == 10
	
	#create Negative list of 16 stimuli
	negative_n.extend(negative)
	#len(negative_n) == 4
	negative_n.extend(negative)
	#len(negative_n) == 8
	negative_n.extend(negative)
	#len(negative_n) == 12
	negative_n.extend(negative)
	#len(negative_n) == 16
	
	#create Sara list of 10 stimuli
	sara_n.extend(sara)
	#len(sara_n) == 4
	sara_n.extend(sara)
	#len(sara_n) == 8
	sara_n.extend(random.sample(sara, 2))
	#len(sara_n) == 10
	
	
	#create and shuffle joint stimuli list
	random.shuffle(positive_n)
	random.shuffle(negative_n)
	random.shuffle(sara_n)
	stim_words.extend(positive_n)
	stim_words.extend(negative_n)
	stim_words.extend(sara_n)
	random.shuffle(stim_words)
	
	#create iterator
	i = 0
	
	#store length of stimuli list for repeat count
	exp.set("stim_len",len(stim_words))
	
	#store location of Sara for correct_response, and category labels
	if sara_loc == "right":
		exp.set("left_cat","")
		exp.set("right_cat",u'U+05E9U+05E8U+05D4')
		sara_correct = "i"
	elif sara_loc == "left":
		exp.set("left_cat",u'U+05E9U+05E8U+05D4')
		exp.set("right_cat","")
		sara_correct = "e"
	else:
		exp.set("left_cat","")
		exp.set("right_cat","")
		sara_correct = " "
	__end__
	set _run ""

define sketchpad Fixation
	set description "Displays stimuli"
	set duration "495"
	set reset_variables "no"
	draw fixdot 0 0 color="white" style="default" z_index=0 show_if="always"
	draw textline 256 -192 "U+05D7U+05D9U+05D5U+05D1U+05D9" center=1 color="white" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -256 -192 "U+05E9U+05DCU+05D9U+05DCU+05D9" center=1 color="white" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -256 -160 "[left_cat]" center=1 color="#00ffff" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 256 -160 "[right_cat]" center=1 color="#00ffff" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define sketchpad IAT_inst1
	set description "Instruction"
	set duration "keypress"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 263 -102 "U+05D7U+05D9U+05D5U+05D1U+05D9:" center=1 color="white" font_family="Alef" font_size=21 font_bold="yes" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 269 -72 "U+05E9U+05DCU+05D9U+05DCU+05D9:" center=1 color="white" font_family="Alef" font_size=21 font_bold="yes" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 255 22 "U+05E9U+05E8U+05D4:" center=1 color="#00ffff" font_family="Alef" font_size=21 font_bold="yes" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -23 -102 "U+05D1U+05D9U+05D8U+05D7U+05D5U+05DF, U+05D4U+05E2U+05E8U+05E6U+05D4, U+05DEU+05E1U+05D5U+05D2U+05DCU+05D5U+05EA, U+05D7U+05D5U+05D6U+05E7" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -43 -72 "U+05D0U+05D9U+05D5U+05DD, U+05E1U+05DBU+05E0U+05D4, U+05D0U+05E9U+05DEU+05D4, U+05DEU+05D7U+05DCU+05D4 U+05D7U+05DEU+05D5U+05E8U+05D4" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -252 "U+05D1U+05D7U+05DCU+05E7 U+05D6U+05D4 U+05EAU+05EAU+05D1U+05E7U+05E9U+05D5 U+05DCU+05DEU+05D9U+05D9U+05DF U+05DEU+05D9U+05DCU+05D9U+05DD U+05D0U+05D5 U+05EAU+05DEU+05D5U+05E0U+05D5U+05EA U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D5U+05EA. U+05D4U+05E9U+05EAU+05D3U+05DCU+05D5 U+05DCU+05D1U+05E6U+05E2 U+05D0U+05EA U+05D4U+05DEU+05E9U+05D9U+05DEU+05D4" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 10 -222 "U+05DEU+05D4U+05E8 U+05DBU+05DBU+05DC U+05D4U+05D0U+05E4U+05E9U+05E8, U+05D0U+05D1U+05DC U+05E2U+05DD U+05DBU+05DEU+05D4 U+05E9U+05E4U+05D7U+05D5U+05EA U+05D8U+05E2U+05D5U+05D9U+05D5U+05EA. U+05D0U+05E0U+05D0 U+05E2U+05D9U+05D1U+05E8U+05D5 U+05E2U+05DC U+05D4U+05D4U+05E0U+05D7U+05D9U+05D5U+05EA U+05D1U+05D6U+05D4U+05D9U+05E8U+05D5U+05EA" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 6 -192 "U+05E8U+05D1U+05D4:" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 64 -132 "U+05DCU+05D4U+05DCU+05DF U+05E8U+05E9U+05D9U+05DEU+05D4 U+05E9U+05DC U+05E9U+05DEU+05D5U+05EA U+05E9U+05DC U+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D5U+05EA U+05D5U+05DEU+05D9U+05DCU+05D9U+05DD U+05D0U+05D5 U+05EAU+05DEU+05D5U+05E0U+05D5U+05EA U+05E9U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05DCU+05D4U+05DF:" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 10 22 "U+05E9U+05E8U+05D4, U+05D7U+05D5U+05DCU+05EA U+05D0U+05DCU+05E6U+05D4U+05D9U+05D9U+05DEU+05E8" center=1 color="#00ffff" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 45 144 "U+05D4U+05E0U+05D9U+05D7U+05D5 U+05D0U+05EA U+05D4U+05D0U+05E6U+05D1U+05E2 U+05D4U+05DEU+05D5U+05E8U+05D4 U+05D1U+05DBU+05DC U+05D9U+05D3 U+05E2U+05DC U+05D4U+05DEU+05E7U+05E9U+05D9U+05DD i U+05D5-e U+05DBU+05D3U+05D9 U+05E9U+05EAU+05D5U+05DBU+05DCU+05D5 U+05DCU+05E2U+05E0U+05D5U+05EA U+05DEU+05D4U+05E8." center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 30 174 "U+05E9U+05EAU+05D9 U+05DBU+05D5U+05EAU+05E8U+05D5U+05EA U+05D1U+05E8U+05D0U+05E9 U+05D4U+05DEU+05E1U+05DA U+05D9U+05D5U+05E8U+05D5 U+05DCU+05DBU+05DD U+05D0U+05D9U+05DCU+05D5 U+05DEU+05D9U+05DCU+05D9U+05DD U+05D0U+05D5 U+05EAU+05DEU+05D5U+05E0U+05D5U+05EA U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05DCU+05DBU+05DC U+05DEU+05E7U+05E9." center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 88 204 "U+05DBU+05DC U+05D2U+05D9U+05E8U+05D5U+05D9 U+05DEU+05EAU+05D0U+05D9U+05DD U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05D0U+05D7U+05EA U+05D1U+05DCU+05D1U+05D3, U+05D5U+05DCU+05E8U+05D5U+05D1 U+05E7U+05DC U+05DCU+05DEU+05E6U+05D5U+05D0 U+05D0U+05D5U+05EAU+05D4." center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 45 234 "U+05DEU+05D9U+05D9U+05E0U+05D5 U+05D0U+05EA U+05D4U+05DEU+05D9U+05DCU+05D9U+05DD U+05D1U+05D4U+05EAU+05D0U+05DD U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05E9U+05D0U+05DCU+05D9U+05D4 U+05D4U+05DF U+05E9U+05D9U+05D9U+05DBU+05D5U+05EA. U+05DEU+05D9U+05DCU+05D9U+05DD U+05D4U+05E6U+05D1U+05D5U+05E2U+05D5U+05EA U+05D1U+05DCU+05D1U+05DF" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 37 264 "U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05DCU+05DBU+05D5U+05EAU+05E8U+05D5U+05EA U+05D1U+05DCU+05D1U+05DF, U+05D5U+05DEU+05D9U+05DCU+05D9U+05DD U+05D4U+05E6U+05D1U+05D5U+05E2U+05D5U+05EA U+05D1U+05EAU+05DBU+05DCU+05EA U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05DCU+05DBU+05D5U+05EAU+05E8U+05D5U+05EA U+05D1U+05EAU+05DBU+05DCU+05EA." center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 221 294 "U+05D4U+05E9U+05EAU+05D3U+05DCU+05D5 U+05DCU+05E2U+05E0U+05D5U+05EA U+05DEU+05D4U+05E8 U+05DBU+05DBU+05DC U+05D4U+05E0U+05D9U+05EAU+05DF." center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -320 372 "U+05DCU+05D4U+05DEU+05E9U+05DA, U+05DCU+05D7U+05E5/U+05D9 U+05E2U+05DC U+05DEU+05E7U+05E9 U+05D4U+05E8U+05D5U+05D5U+05D7" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw image -192 -64 "young.JPG" scale=0.3 center=0 z_index=0 show_if="always"
	draw image -320 -64 "young-bw.jpg" scale=0.3 center=0 z_index=0 show_if="always"

define sketchpad IAT_inst2
	set description "General Instruction"
	set duration "keypress"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 0 -222 "U+05DBU+05D0U+05DEU+05D5U+05E8, U+05E2U+05DCU+05D9U+05DBU+05DD U+05DCU+05DEU+05D9U+05D9U+05DF U+05D0U+05EA U+05D4U+05DEU+05D9U+05DCU+05D9U+05DD U+05D4U+05DEU+05D5U+05E4U+05D9U+05E2U+05D5U+05EA U+05D1U+05DEU+05E8U+05DBU+05D6 U+05D4U+05DEU+05E1U+05DA" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -192 "U+05DCU+05D0U+05D7U+05EA U+05DEU+05E9U+05EAU+05D9 U+05D4U+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D5U+05EA U+05D4U+05DEU+05D5U+05E4U+05D9U+05E2U+05D5U+05EA U+05D1U+05E8U+05D0U+05E9 U+05D4U+05DEU+05E1U+05DA" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -102 "U+05DBU+05D0U+05E9U+05E8 U+05D4U+05DEU+05D9U+05DCU+05D9U+05DD U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05DEU+05E9U+05DEU+05D0U+05DC, U+05D4U+05E7U+05D9U+05E9U+05D5 'e'" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -72 "U+05DBU+05D0U+05E9U+05E8 U+05D4U+05DEU+05D9U+05DCU+05D9U+05DD U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05DEU+05D9U+05DEU+05D9U+05DF, U+05D4U+05E7U+05D9U+05E9U+05D5 'i.'" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 50 "U+05D4U+05DEU+05D9U+05DCU+05D9U+05DD U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05E8U+05E7 U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05D0U+05D7U+05EA." center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 80 "U+05D0U+05DD U+05EAU+05D1U+05E6U+05E2U+05D5 U+05D8U+05E2U+05D5U+05EA U+05D9U+05D5U+05E4U+05D9U+05E2 U+05E2U+05DC U+05D4U+05DEU+05E1U+05DA" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 110 "U+05EAU+05E7U+05E0U+05D5 U+05D0U+05EA U+05D4U+05D8U+05E2U+05D5U+05EA U+05D1U+05E2U+05D6U+05E8U+05EA U+05D4U+05DEU+05E7U+05E9 U+05D4U+05D0U+05D7U+05E8" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -202 60 "X" center=0 color="red" font_family="Alef" font_size=19 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 138 "U+05D4U+05D2U+05D9U+05D1U+05D5 U+05D1U+05DEU+05D4U+05D9U+05E8U+05D5U+05EA U+05D4U+05D0U+05E4U+05E9U+05E8U+05D9U+05EA U+05D5U+05E0U+05E1U+05D5 U+05DCU+05D4U+05D9U+05DEU+05E0U+05E2 U+05DEU+05D8U+05E2U+05D5U+05D9U+05D5U+05EA." center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -320 372 "U+05DCU+05D4U+05DEU+05E9U+05DA, U+05DCU+05D7U+05E5/U+05D9 U+05E2U+05DC U+05DEU+05E7U+05E9 U+05D4U+05E8U+05D5U+05D5U+05D7" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define sketchpad Inst_block_pictures
	set description "Block inst"
	set duration "keypress"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 0 -252 "U+05D1U+05D1U+05DCU+05D5U+05E7 U+05D4U+05D6U+05D4 U+05D4U+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D5U+05EA U+05D4U+05DF:" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 250 -222 "U+05D7U+05D9U+05D5U+05D1U+05D9" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -222 "U+05DEU+05D5U+05DC" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -250 -222 "U+05E9U+05DCU+05D9U+05DCU+05D9" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 48 "U+05DCU+05D7U+05E6U+05D5 U+05E2U+05DC U+05D4U+05DEU+05E7U+05E9 'e' U+05D0U+05DD U+05D4U+05D2U+05D9U+05E8U+05D5U+05D9 U+05E9U+05D9U+05D9U+05DA U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4  U+05DEU+05E9U+05DEU+05D0U+05DC" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 78 "U+05DCU+05D7U+05E6U+05D5 U+05E2U+05DC U+05D4U+05DEU+05E7U+05E9 'i' U+05D0U+05DD U+05D4U+05D2U+05D9U+05E8U+05D5U+05D9 U+05E9U+05D9U+05D9U+05DA U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05DEU+05D9U+05DEU+05D9U+05DF" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -320 372 "U+05DCU+05D4U+05DEU+05E9U+05DA, U+05DCU+05D7U+05E5/U+05D9 U+05E2U+05DC U+05DEU+05E7U+05E9 U+05D4U+05E8U+05D5U+05D5U+05D7" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -256 -192 "[left_cat]" center=1 color="#00ffff" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 256 -192 "[right_cat]" center=1 color="#00ffff" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define inline_script Practice
	___prepare__
	stim_words = []
	sara_n = []
	positive_n = []
	negative_n = []
	
	#Where is Sara?
	#Sara is nowhere
	sara_loc = "none"
	
	
	#create Positive list of 10 stimuli
	positive_n.extend(positive)
	#len(positive_n) == 4
	positive_n.extend(positive)
	#len(positive_n) == 8
	positive_n.extend(random.sample(positive, 2))
	#len(positive_n) == 10
	
	#create Negative list of 10 stimuli
	negative_n.extend(negative)
	#len(negative_n) == 4
	negative_n.extend(negative)
	#len(negative_n) == 8
	negative_n.extend(random.sample(negative, 2))
	#len(negative_n) == 10
	
	#create Sara list of 0 stimuli
	
	
	#create and shuffle joint stimuli list
	random.shuffle(positive_n)
	random.shuffle(negative_n)
	random.shuffle(sara_n)
	stim_words.extend(positive_n)
	stim_words.extend(negative_n)
	stim_words.extend(sara_n)
	random.shuffle(stim_words)
	
	#create iterator
	i = 0
	
	#store length of stimuli list for repeat count
	exp.set("stim_len",len(stim_words))
	
	#store location of Sara for correct_response, and category labels
	if sara_loc == "right":
		exp.set("left_cat","")
		exp.set("right_cat",u'U+05E9U+05E8U+05D4')
		sara_correct = "i"
	elif sara_loc == "left":
		exp.set("left_cat",u'U+05E9U+05E8U+05D4')
		exp.set("right_cat","")
		sara_correct = "e"
	else:
		exp.set("left_cat","")
		exp.set("right_cat","")
		sara_correct = " "
	__end__
	set _run ""

define sketchpad Practice_Inst_block_pictures
	set description "Block inst"
	set duration "keypress"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 0 -252 "U+05D1U+05D1U+05DCU+05D5U+05E7 U+05D4U+05D6U+05D4 U+05D4U+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D5U+05EA U+05D4U+05DF:" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 250 -222 "U+05D7U+05D9U+05D5U+05D1U+05D9" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -222 "U+05DEU+05D5U+05DC" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -250 -222 "U+05E9U+05DCU+05D9U+05DCU+05D9" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -132 "U+05D2U+05D9U+05E8U+05D5U+05D9U+05D9U+05DD U+05E9U+05E9U+05D9U+05D9U+05DBU+05D9U+05DD U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 'U+05D7U+05D9U+05D5U+05D1U+05D9':" center=1 color="white" font_family="Alef" font_size=21 font_bold="YES" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -102 "U+05D1U+05D9U+05D8U+05D7U+05D5U+05DF, U+05D4U+05E2U+05E8U+05E6U+05D4, U+05DEU+05E1U+05D5U+05D2U+05DCU+05D5U+05EA, U+05D7U+05D5U+05D6U+05E7" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -42 "U+05D2U+05D9U+05E8U+05D5U+05D9U+05D9U+05DD U+05E9U+05E9U+05D9U+05D9U+05DBU+05D9U+05DD U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 'U+05E9U+05DCU+05D9U+05DCU+05D9':" center=1 color="white" font_family="Alef" font_size=21 font_bold="YESshow_if=always" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -12 "U+05D0U+05D9U+05D5U+05DD, U+05E1U+05DBU+05E0U+05D4, U+05D0U+05E9U+05DEU+05D4, U+05DEU+05D7U+05DCU+05D4 U+05D7U+05DEU+05D5U+05E8U+05D4" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 48 "U+05DCU+05D7U+05E6U+05D5 U+05E2U+05DC U+05D4U+05DEU+05E7U+05E9 'e' U+05D0U+05DD U+05D4U+05D2U+05D9U+05E8U+05D5U+05D9 U+05E9U+05D9U+05D9U+05DA U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4  U+05E9U+05DCU+05D9U+05DCU+05D9" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 78 "U+05DCU+05D7U+05E6U+05D5 U+05E2U+05DC U+05D4U+05DEU+05E7U+05E9 'i' U+05D0U+05DD U+05D4U+05D2U+05D9U+05E8U+05D5U+05D9 U+05E9U+05D9U+05D9U+05DA U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05D7U+05D9U+05D5U+05D1U+05D9" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -320 372 "U+05DCU+05D4U+05DEU+05E9U+05DA, U+05DCU+05D7U+05E5/U+05D9 U+05E2U+05DC U+05DEU+05E7U+05E9 U+05D4U+05E8U+05D5U+05D5U+05D7" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define sequence Practice_block_sequence
	set description "A sequence containing a single block of trials followed by feedback to the participant"
	set flush_keyboard "yes"
	run Practice "never"
	run Practice_Inst_block_pictures "never"
	run reset_feedback "never"
	run block_loop "never"

define sequence Sara_left_block_sequence
	set description "A sequence containing a single block of trials followed by feedback to the participant"
	set flush_keyboard "yes"
	run Block_left "always"
	run Inst_block_pictures "always"
	run reset_feedback "always"
	run block_loop "always"

define loop Sara_left_loop
	set break_if "never"
	set column_order "practice"
	set cycles "1"
	set description "A loop containing one or more experimental blocks"
	set item ""
	set order "random"
	set repeat "1"
	setcycle 0 practice "no"
	run Sara_left_block_sequence

define sequence Sara_right_block_sequence
	set description "A sequence containing a single block of trials followed by feedback to the participant"
	set flush_keyboard "yes"
	run Block_right "always"
	run Inst_block_pictures "always"
	run reset_feedback "always"
	run block_loop "always"

define loop Sara_right_loop
	set break_if "never"
	set column_order "practice"
	set cycles "1"
	set description "A loop containing one or more experimental blocks"
	set item "Sara_right_block_sequence"
	set order "random"
	set repeat "1"
	setcycle 0 practice "no"
	run Sara_right_block_sequence

define logger _logger

define loop block_loop
	set break_if "never"
	set column_order "stim_picture"
	set cycles "1"
	set description "A single block of trials"
	set item "trial_sequence"
	set order "random"
	set repeat "[stim_len]"
	setcycle 0 stim_picture "empty.png"
	run trial_sequence

define inline_script check_for_second_chance
	set _prepare ""
	___run__
	# First, check whether the response was correct by using the
	# built-in OpenSesame variable 'correct', It has the
	# value 1 if the most recent response was correct, and the
	# value 0 if it was incorrect.
	# We retrieve this variable by using the experiment function
	# 'self.get()'.
	# If the response was correct, we DON'T need to run the 'second
	# chance' items:
	
	# If the response was correct, we DON'T need to run the 'second
	# chance' items:
	if self.get("correct") == 1:
		exp.set("second_chance", 'no')
	
	# If the response was incorrect, we DO need to run the 'second
	# chance items:
	elif self.get("correct") == 0:
		exp.set("second_chance", 'yes')
	__end__
	set description "Executes Python code"

define sketchpad end_of_experiment
	set description "A sketchpad notifying the participant that the experiment is finished"
	set duration "keypress"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 0 0 "Press any key to exit" center=1 color="white" font_family="mono" font_size=18 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define sketchpad end_of_practice
	set description "A sketchpad notifying the participant that the practice phase is finished"
	set duration "keypress"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 0 -288 "U+05E9U+05D9U+05DEU+05D5 U+05DCU+05D1,<br />U+05DBU+05E2U+05EA U+05DEU+05E9U+05EAU+05E0U+05D5U+05EA U+05D4U+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D5U+05EA U+05D1U+05E8U+05D0U+05E9 U+05D4U+05DEU+05E1U+05DA, U+05D0U+05D1U+05DC U+05DBU+05DCU+05DCU+05D9 U+05D4U+05DEU+05E9U+05D9U+05DEU+05D4 U+05E0U+05E9U+05D0U+05E8U+05D9U+05DD U+05D6U+05D4U+05D9U+05DD:<br />" center=1 color="white" font_family="Alef" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -222 "U+05E2U+05DCU+05D9U+05DBU+05DD U+05DCU+05DEU+05D9U+05D9U+05DF U+05D0U+05EA U+05D4U+05DEU+05D9U+05DCU+05D9U+05DD U+05D4U+05DEU+05D5U+05E4U+05D9U+05E2U+05D5U+05EA U+05D1U+05DEU+05E8U+05DBU+05D6 U+05D4U+05DEU+05E1U+05DA" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -192 "U+05DCU+05D0U+05D7U+05EA U+05DEU+05E9U+05EAU+05D9 U+05D4U+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D5U+05EA U+05D4U+05DEU+05D5U+05E4U+05D9U+05E2U+05D5U+05EA U+05D1U+05E8U+05D0U+05E9 U+05D4U+05DEU+05E1U+05DA" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -102 "U+05DBU+05D0U+05E9U+05E8 U+05D4U+05DEU+05D9U+05DCU+05D9U+05DD U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05DEU+05E9U+05DEU+05D0U+05DC, U+05D4U+05E7U+05D9U+05E9U+05D5 'e'" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -72 "U+05DBU+05D0U+05E9U+05E8 U+05D4U+05DEU+05D9U+05DCU+05D9U+05DD U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05DEU+05D9U+05DEU+05D9U+05DF, U+05D4U+05E7U+05D9U+05E9U+05D5 'i.'" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 50 "U+05D4U+05DEU+05D9U+05DCU+05D9U+05DD U+05DEU+05EAU+05D0U+05D9U+05DEU+05D5U+05EA U+05E8U+05E7 U+05DCU+05E7U+05D8U+05D2U+05D5U+05E8U+05D9U+05D4 U+05D0U+05D7U+05EA." center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 80 "U+05D0U+05DD U+05EAU+05D1U+05E6U+05E2U+05D5 U+05D8U+05E2U+05D5U+05EA U+05D9U+05D5U+05E4U+05D9U+05E2 U+05E2U+05DC U+05D4U+05DEU+05E1U+05DA" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 110 "U+05EAU+05E7U+05E0U+05D5 U+05D0U+05EA U+05D4U+05D8U+05E2U+05D5U+05EA U+05D1U+05E2U+05D6U+05E8U+05EA U+05D4U+05DEU+05E7U+05E9 U+05D4U+05D0U+05D7U+05E8" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -170.0 60.0 "X" center=0 color="red" font_family="Alef" font_size=19 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 138 "U+05D4U+05D2U+05D9U+05D1U+05D5 U+05D1U+05DEU+05D4U+05D9U+05E8U+05D5U+05EA U+05D4U+05D0U+05E4U+05E9U+05E8U+05D9U+05EA U+05D5U+05E0U+05E1U+05D5 U+05DCU+05D4U+05D9U+05DEU+05E0U+05E2 U+05DEU+05D8U+05E2U+05D5U+05D9U+05D5U+05EA." center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -320 372 "U+05DCU+05D4U+05DEU+05E9U+05DA, U+05DCU+05D7U+05E5/U+05D9 U+05E2U+05DC U+05DEU+05E7U+05E9 U+05D4U+05E8U+05D5U+05D5U+05D7" center=1 color="white" font_family="Alef" font_size=21 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define sequence experiment
	set description "The main sequence of the experiment"
	set flush_keyboard "yes"
	run IAT_inst1 "always"
	run IAT_inst2 "always"
	run init "always"
	run practice_loop "always"
	run end_of_practice "always"
	run Sara_right_loop "always"
	run Sara_left_loop "always"
	run end_of_experiment "always"

define keyboard_response first_chance_response
	set allowed_responses "i;e"
	set description "Collects keyboard responses"
	set flush "yes"
	set timeout "infinite"

define sketchpad first_chance_stim
	set description "Displays stimuli"
	set duration "0"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 256 -192 "U+05D7U+05D9U+05D5U+05D1U+05D9" center=1 color="white" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -256 -192 "U+05E9U+05DCU+05D9U+05DCU+05D9" center=1 color="white" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 0 "[stim_word]" center=1 color="white" font_family="hebrew" font_size=28 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="[stim_word] != none"
	draw image 0 0 "[stim_picture]" scale=0.3 center=1 z_index=0 show_if="always"
	draw textline -256 -160 "[left_cat]" center=1 color="#00ffff" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 256 -160 "[right_cat]" center=1 color="#00ffff" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define inline_script init
	___prepare__
	import random
	sara = [u'U+05D7U+05D5U+05DCU+05EA U+05D0U+05DCU+05E6U+05D4U+05D9U+05D9U+05DEU+05E8',u'U+05E9U+05E8U+05D4','young','young-bw']
	positive = [u'U+05D1U+05D9U+05D8U+05D7U+05D5U+05DF',u'U+05D4U+05E2U+05E8U+05E6U+05D4',u'U+05DEU+05E1U+05D5U+05D2U+05DCU+05D5U+05EA',u'U+05D7U+05D5U+05D6U+05E7']
	negative = [u'U+05D0U+05D9U+05D5U+05DD',u'U+05E1U+05DBU+05E0U+05D4',u'U+05D0U+05E9U+05DEU+05D4',u'U+05DEU+05D7U+05DCU+05D4 U+05D7U+05DEU+05D5U+05E8U+05D4']
	__end__
	set _run ""

define loop practice_loop
	set break_if "never"
	set column_order "practice"
	set cycles "1"
	set description "A loop containing one or more practice blocks"
	set item "Practice_block_sequence"
	set order "random"
	set repeat "1"
	setcycle 0 practice "yes"
	run Practice_block_sequence

define inline_script prepare_stimuli
	___prepare__
	if stim_words[i] in positive:
		exp.set("correct_response",'i')
	elif stim_words[i] in negative:
		exp.set("correct_response",'e')
	elif stim_words[i] in sara:
		exp.set("correct_response",sara_correct)
		
	
	#display pictures, remove word stimuli
	if stim_words[i] == u'young':
		exp.set("stim_picture",'young.jpg')
		stim_words[i] = ''	
	elif stim_words[i] == u'young-bw':
		exp.set("stim_picture",'young-bw.jpg')
		stim_words[i] = ''
	elif stim_words[i] == u'old':
		exp.set("stim_picture",'old.jpg')
		stim_words[i] = ''
	elif stim_words[i] == u'old-bw':
		exp.set("stim_picture",'old-bw.jpg')
		stim_words[i] = ''
		
	
	exp.set("stim_word",stim_words[i])
	
	#this should be last
	if i < len(stim_words):
		i = i + 1
	__end__
	set _run ""

define reset_feedback reset_feedback

define keyboard_response second_chance_response
	set allowed_responses "[correct_response]"
	set description "Collects keyboard responses"
	set flush "yes"
	set timeout "infinite"

define sketchpad second_chance_stim
	set description "Displays stimuli"
	set duration "0"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 256 -192 "U+05D7U+05D9U+05D5U+05D1U+05D9" center=1 color="white" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -256 -192 "U+05E9U+05DCU+05D9U+05DCU+05D9" center=1 color="white" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 80 "X" center=1 color="red" font_family="mono" font_size=18 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 0 "[stim_word]" center=1 color="white" font_family="hebrew" font_size=28 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="[stim_word] != none"
	draw image 0 0 "[stim_picture]" scale=0.3 center=1 z_index=0 show_if="always"
	draw textline -256 -160 "[left_cat]" center=1 color="#00ffff" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 256 -160 "[right_cat]" center=1 color="#00ffff" font_family="hebrew" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define sequence trial_sequence
	set description "A single trial"
	set flush_keyboard "yes"
	run prepare_stimuli "always"
	run Fixation "always"
	run first_chance_stim "always"
	run first_chance_response "always"
	run check_for_second_chance "always"
	run second_chance_stim "[second_chance]=yes"
	run second_chance_response "[second_chance]=yes"
	run _logger "always"

